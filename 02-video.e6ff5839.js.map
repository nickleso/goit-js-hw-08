{"mappings":"AAAA,MAAMA,EAASC,SAASC,cAAc,UAChCC,EAAS,IAAIC,MAAMC,OAAOL,GAKhCG,EAAOG,gBAAgBC,MAAK,SAAUC,GACpCC,QAAQC,IAAI,SAAUF,MASxBL,EAAOQ,GAAG,cALV,UAAqBC,QAAEA,IACrB,MAAMC,EAAcC,KAAKC,MAAMH,GAC/BI,aAAaC,QAVkB,2BAUgBJ,MAKjD,MAAMK,EAAYF,aAAaG,QAfE,4BAgBjCV,QAAQC,IAAI,aAAaQ,aAEzBf,EACGiB,eAAeF,GACfX,MAAK,SAAUK,OAGfS,OAAM,SAAUC,GACPA,EAAMC","sources":["src/js/02-video.js"],"sourcesContent":["const iframe = document.querySelector('iframe');\nconst player = new Vimeo.Player(iframe);\n\nconst VIDEOPLAYER_CURRENT_TIME = 'videoplayer-current-time';\n\n// video Title\nplayer.getVideoTitle().then(function (title) {\n  console.log('title:', title);\n});\n\n// current time\nfunction currentTime({ seconds }) {\n  const timeToStart = Math.round(seconds);\n  localStorage.setItem(VIDEOPLAYER_CURRENT_TIME, timeToStart);\n}\n\nplayer.on('timeupdate', currentTime);\n\nconst savedTime = localStorage.getItem(VIDEOPLAYER_CURRENT_TIME);\nconsole.log(`Pause on: ${savedTime} seconds`);\n\nplayer\n  .setCurrentTime(savedTime)\n  .then(function (seconds) {\n    // seconds = the actual time that the player seeked to\n  })\n  .catch(function (error) {\n    switch (error.name) {\n      case 'RangeError':\n        // the time was less than 0 or greater than the videoâ€™s duration\n        break;\n\n      default:\n        // some other error occurred\n        break;\n    }\n  });\n"],"names":["$c006019e0678fe87$var$iframe","document","querySelector","$c006019e0678fe87$var$player","Vimeo","Player","getVideoTitle","then","title","console","log","on","seconds","timeToStart","Math","round","localStorage","setItem","$c006019e0678fe87$var$savedTime","getItem","setCurrentTime","catch","error","name"],"version":3,"file":"02-video.e6ff5839.js.map"}